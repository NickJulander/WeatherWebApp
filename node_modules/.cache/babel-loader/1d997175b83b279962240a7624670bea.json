{"ast":null,"code":"const mysql = require('mysql');\n\nvar instance = null;\nconst connection = mysql.createConnection({\n  host: \"weatherdb.cmn7v329ii2s.us-east-1.rds.amazonaws.com\",\n  user: \"admin\",\n  password: 'password',\n  database: \"weatherdb\",\n  port: 3306\n});\nconnection.connect(err => {\n  if (err) {\n    console.log(\"ERROR\" + err.message);\n  }\n\n  console.log('db ' + connection.state);\n});\n\nclass DbService {\n  static getDbServiceInstance() {\n    return instance ? instance : new DbService();\n  } //get all weather data\n\n\n  async getAllCities() {\n    try {\n      const res = await new Promise((resolve, reject) => {\n        const query = \"SELECT * FROM CityWeather;\";\n        connection.query(query, (err, result) => {\n          if (err) reject(new Error(err.message));\n          resolve(result);\n        });\n      });\n      return res;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}\n\nmodule.exports = DbService;","map":{"version":3,"sources":["/Users/nickjulander/Documents/github_docs/WeatherWebApp/src/dbservice.js"],"names":["mysql","require","instance","connection","createConnection","host","user","password","database","port","connect","err","console","log","message","state","DbService","getDbServiceInstance","getAllCities","res","Promise","resolve","reject","query","result","Error","error","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAIC,QAAQ,GAAG,IAAf;AAEA,MAAMC,UAAU,GAAGH,KAAK,CAACI,gBAAN,CAAuB;AACxCC,EAAAA,IAAI,EAAE,oDADkC;AAExCC,EAAAA,IAAI,EAAE,OAFkC;AAGxCC,EAAAA,QAAQ,EAAE,UAH8B;AAIxCC,EAAAA,QAAQ,EAAE,WAJ8B;AAKxCC,EAAAA,IAAI,EAAE;AALkC,CAAvB,CAAnB;AAQAN,UAAU,CAACO,OAAX,CAAoBC,GAAD,IAAS;AAC1B,MAAIA,GAAJ,EAAS;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,GAAG,CAACG,OAA1B;AACD;;AACDF,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQV,UAAU,CAACY,KAA/B;AACD,CALD;;AAOA,MAAMC,SAAN,CAAe;AACc,SAApBC,oBAAoB,GAAG;AAC5B,WAAOf,QAAQ,GAAGA,QAAH,GAAc,IAAIc,SAAJ,EAA7B;AACD,GAHY,CAKb;;;AACkB,QAAZE,YAAY,GAAG;AACnB,QAAI;AACF,YAAMC,GAAG,GAAG,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACjD,cAAMC,KAAK,GAAG,4BAAd;AACApB,QAAAA,UAAU,CAACoB,KAAX,CAAiBA,KAAjB,EAAwB,CAACZ,GAAD,EAAMa,MAAN,KAAiB;AACvC,cAAIb,GAAJ,EAASW,MAAM,CAAE,IAAIG,KAAJ,CAAUd,GAAG,CAACG,OAAd,CAAF,CAAN;AACTO,UAAAA,OAAO,CAACG,MAAD,CAAP;AACD,SAHD;AAID,OANiB,CAAlB;AAOA,aAAOL,GAAP;AACD,KATD,CASE,OAAOO,KAAP,EAAc;AACdd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACD;AACF;;AAnBY;;AAuBfC,MAAM,CAACC,OAAP,GAAiBZ,SAAjB","sourcesContent":["const mysql = require('mysql');\n\nvar instance = null;\n\nconst connection = mysql.createConnection({\n  host: \"weatherdb.cmn7v329ii2s.us-east-1.rds.amazonaws.com\",\n  user: \"admin\",\n  password: 'password',\n  database: \"weatherdb\",\n  port: 3306,\n});\n\nconnection.connect((err) => {\n  if (err) {\n    console.log(\"ERROR\" + err.message);\n  }\n  console.log('db ' + connection.state)\n});\n\nclass DbService{\n  static getDbServiceInstance() {\n    return instance ? instance : new DbService();\n  }\n\n  //get all weather data\n  async getAllCities() {\n    try {\n      const res = await new Promise((resolve, reject) => {\n        const query = \"SELECT * FROM CityWeather;\";\n        connection.query(query, (err, result) => {\n          if (err) reject (new Error(err.message));\n          resolve(result);\n        });\n      });\n      return res;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}\n\nmodule.exports = DbService;\n"]},"metadata":{},"sourceType":"module"}