{"ast":null,"code":"const express = require('express');\n\nconst app = express();\n\nconst cors = require('cors');\n\nconst dbservice = require('./dbservice');\n\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.get('/cities', (request, response) => {\n  const db = dbservice.getDbServiceInstance();\n  const result = db.getAllCities();\n  result.then(data => response.json({\n    data: data\n  })).catch(err => console.logg(err));\n});\napp.listen(5000, () => console.log(\"app is running\"));","map":{"version":3,"sources":["/Users/nickjulander/Documents/github_docs/WeatherWebApp/src/App.js"],"names":["express","require","app","cors","dbservice","use","json","urlencoded","extended","get","request","response","db","getDbServiceInstance","result","getAllCities","then","data","catch","err","console","logg","listen","log"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,MAAMG,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,SAAS,GAAGH,OAAO,CAAC,aAAD,CAAzB;;AAEAC,GAAG,CAACG,GAAJ,CAAQF,IAAI,EAAZ;AACAD,GAAG,CAACG,GAAJ,CAAQL,OAAO,CAACM,IAAR,EAAR;AACAJ,GAAG,CAACG,GAAJ,CAAQL,OAAO,CAACO,UAAR,CAAmB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAnB,CAAR;AAEAN,GAAG,CAACO,GAAJ,CAAQ,SAAR,EAAmB,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACxC,QAAMC,EAAE,GAAGR,SAAS,CAACS,oBAAV,EAAX;AACA,QAAMC,MAAM,GAAGF,EAAE,CAACG,YAAH,EAAf;AAEAD,EAAAA,MAAM,CACLE,IADD,CACMC,IAAI,IAAIN,QAAQ,CAACL,IAAT,CAAc;AAACW,IAAAA,IAAI,EAAEA;AAAP,GAAd,CADd,EAECC,KAFD,CAEOC,GAAG,IAAIC,OAAO,CAACC,IAAR,CAAaF,GAAb,CAFd;AAGD,CAPD;AASAjB,GAAG,CAACoB,MAAJ,CAAW,IAAX,EAAiB,MAAMF,OAAO,CAACG,GAAR,CAAY,gBAAZ,CAAvB","sourcesContent":["const express = require('express');\nconst app = express();\nconst cors = require('cors');\nconst dbservice = require('./dbservice');\n\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({extended: false}));\n\napp.get('/cities', (request, response) => {\n  const db = dbservice.getDbServiceInstance();\n  const result = db.getAllCities();\n\n  result\n  .then(data => response.json({data: data}))\n  .catch(err => console.logg(err));\n});\n\napp.listen(5000, () => console.log(\"app is running\"));\n"]},"metadata":{},"sourceType":"module"}